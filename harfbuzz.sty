\ProvidesPackage{harfbuzz}
\RequirePackage{luacode,luatexbase}

\begin{luacode*}
  require "hb_paths"
  require "hb_lualoader"
  luaharfbuzz = require "hb_shaper"
  local fontloader = require "hb_fontload"
   luatexbase.add_to_callback("define_font",fontloader.loader, "font loader")
\end{luacode*}

\newcommand\startharfbuzz{%
%\begin{luacode*}
\luaexec{
  luatexbase.add_to_callback("pre_linebreak_filter",luaharfbuzz.process_nodes, "harfbuzz")
  -- this fails
  luatexbase.add_to_callback("hpack_filter",luaharfbuzz.process_nodes, "harfbuzz_hpack")
}
%\end{luacode*}%
}

\newcommand\stopharfbuzz{%
%\begin{luacode*}
\luaexec{%
  luatexbase.remove_from_callback("pre_linebreak_filter","harfbuzz")
  -- hbox processing sometimes fails
  luatexbase.remove_from_callback("hpack_filter","harfbuzz_hpack")
}
%\end{luacode*}%
}

\newcommand\SetFontOption[2]{%
  \luaexec{%
    % luaharfbuzz.options["\luatexluaescapestring{#1}"]="\luatexluaescapestrya"ing{#2}"
    luaharfbuzz.set_font_option("\luatexluaescapestring{#1}", "\luatexluaescapestring{#2}")
    luaharfbuzz.save_options(font.current())
  }
}

\endinput
